/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <13 14>;
            layers = <0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 14>;
            layers = <0>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <41 42>;
            layers = <0>;
        };

        enter {
            bindings = <&kp RET>;
            key-positions = <43 42>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC                   &kp N1       &kp N2        &kp N3        &kp N4  &kp N5                                             &kp N6               &kp N7        &kp N8       &kp N9          &kp N0       &kp BSPC
                &kp TAB                    &kp Q        &kp W         &kp E         &kp R   &kp T   &kp LPAR                        &kp RPAR   &kp Y                &kp U         &kp I        &kp O           &kp P      &kp MINUS
              &kp LCTRL              &bhm LGUI A  &bhm LALT S  &bhm LSHFT D  &bhm LCTRL F   &kp G   &kp LBKT                        &kp RBKT   &kp H         &bhm RCTRL J  &bhm RSHFT K  &bhm RALT L  &bhm RGUI SEMI        &kp SQT
              &kp LSHFT                    &kp Z        &kp X         &kp C         &kp V   &kp B  &kp PG_UP  &kp PG_DN  &kp HOME    &kp END   &kp N                &kp M     &kp COMMA      &kp DOT        &kp FSLH  &mt RSHFT RET
&kp LS(LA(LC(LG(F11))))  &kp LS(LA(LC(LG(F12))))     &kp LGUI         &mo 3                 &mo 1  &kp SPACE  &kp SPACE     &mo 3  &kp SPACE          &mo 2                    &kp LEFT     &kp DOWN          &kp UP      &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
 &trans     &trans     &trans     &trans     &trans     &trans                                           &trans         &trans  &trans  &trans       &trans        &trans
&kp ESC     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5  &trans                  &trans           &kp N6         &kp N7  &kp N8  &kp N9       &kp N0       &kp DEL
 &trans  &kp MINUS  &kp EQUAL   &kp LBKT   &kp RBKT   &kp BSLH  &trans                  &trans  &kp KP_MULTIPLY         &kp N4  &kp N5  &kp N6  &kp KP_PLUS  &kp KP_MINUS
 &trans    &kp ESC   &kp LGUI  &kp LG(C)  &kp LG(V)  &kp GRAVE  &trans  &trans  &trans  &trans    &kp KP_DIVIDE         &kp N1  &kp N2  &kp N3      &kp RET       &kp RET
 &trans     &trans     &trans     &trans                &trans  &trans  &trans  &trans  &kp N0                   &mo 3          &trans  &trans       &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
 &trans     &trans    &trans    &trans    &trans     &trans                                     &trans             &trans     &trans    &trans     &trans     &trans
&kp ESC   &kp EXCL    &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &trans                  &trans  &kp CARET           &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR    &kp DEL
 &trans  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC   &kp PIPE  &trans                  &trans   &kp HOME          &kp PG_UP  &kp PSCRN    &kp UP  &kp GRAVE  &kp TILDE
 &trans    &kp ESC  &kp LGUI  &kp LPAR  &kp RPAR  &kp TILDE  &trans  &trans  &trans  &trans    &kp END          &kp PG_DN   &kp LEFT  &kp DOWN  &kp RIGHT    &kp RET
 &trans     &trans    &trans     &mo 3               &trans   &mo 3  &trans  &trans  &trans             &trans                &trans    &trans     &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
      &kp F1        &kp F2        &kp F3        &kp F4            &kp F5        &kp F6                                                &kp F7                &kp F8        &kp F9       &kp F10       &kp F11       &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4  &out OUT_TOG  &bt BT_CLR                  &bt BT_CLR  &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_TOG
      &trans    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE         &none  &sys_reset                      &trans        &kp F1                &kp F2        &kp F3        &kp F4        &kp F5        &kp F6
      &trans     &kp PSCRN      &kp PIPE    &caps_word             &none         &none      &trans  &trans  &trans      &trans        &kp F7                &kp F8        &kp F9       &kp F10       &kp F11       &kp F12
      &trans        &trans        &trans        &trans                          &trans      &trans  &trans  &trans      &trans                &trans                      &trans        &trans        &trans        &trans
            >;
        };
    };
};
